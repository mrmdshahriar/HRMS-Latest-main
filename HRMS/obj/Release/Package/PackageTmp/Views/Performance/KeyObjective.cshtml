
@using HRMS.Models

@{
    ViewBag.Title = "KeyObjective";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- base:css -->
<link rel="stylesheet" href="~/Content/Assets/vendors/mdi/css/materialdesignicons.min.css">
<link rel="stylesheet" href="~/Content/Assets/vendors/base/vendor.bundle.base.css">

<!-- endinject -->
<!-- plugin css for this page -->
@*
    <link href="https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />*@
<link href="~/Content/Assets/vendors/datatables.net-bs4/dataTables.bootstrap4.css" rel="stylesheet" />

<!-- End plugin css for this page -->
<!-- inject:css -->
<link href="~/Content/Assets/css/vertical-layout-light/style.css" rel="stylesheet" />

<link href="~/Content/Assets/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<link href="~/Content/Assets/css/Country.css" rel="stylesheet" />
<br />
<br />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />





<div class="container">
    <!-- Button trigger modal -->
    @*<div class="row my-3">
            <div class="col-sm-12">
                <button type="button" class="btn btn-inverse-primary u-btn-3d  d-block ml-auto" data-toggle="modal" data-target="#CountryModal" onclick="clearfields()"><i class="fas fa-pen md-fa-pen"></i> Create</button>
            </div>
        </div>*@


    @*<button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#CountryModal" onclick="clearfields()"><i class="fas fa-pen md-fa-pen"></i> Create</button>*@

    <center>
        <div>
            <h3>Departments</h3>
            <div>
                @foreach (var dept in (List<Department>)ViewBag.deptName)
                {

                    @*<button id="GetDeptChange" onclick="DeptChange();" btn btn-link>@dept.Name </button>*@

                    <input type="button" class="btn btn-primary" style="padding:5px 25px;" id="GetDeptChange" value="@dept.Name" onclick="DeptChange(this);" />

                }

                <input id="departmentName" type="hidden" value="" />
            </div>



        </div>
    </center>

    <!-- Modal -->
    <div class="modal fade" id="DeductionModal" tabindex="-1" role="dialog" aria-labelledby="CountryModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header modal-header">
                    <h4 class="modal-title" style="color:white">Add/Update Key Objects</h4>
                    <button type="button" class="close" data-bs-dismiss="modal">×</button>
                </div>
                <div class="modal-body">

                    <div class="row">

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Define Objective </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="DefineObjective" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="text" placeholder=" Enter Objective">
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 bg-classification" for="inputGroupStatus">Department</label> <span style="color:red">*</span>
                                <div class="form-group u-select--v3 g-pos-rel g-brd-gray-light-v7 g-rounded-4 mb-0">
                                    <select id="DepId" name="DepId" class="form-control classification-select" onchange="DepartmentsChange(this.value)">
                                        <option value="-1" selected="selected">Select Department</option>
                                    </select>
                                </div>
                            </div>
                        </div>


                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 bg-classification" for="inputGroupStatus">Employee</label> <span style="color:red">*</span>
                                <div class="form-group u-select--v3 g-pos-rel g-brd-gray-light-v7 g-rounded-4 mb-0">
                                    <select id="AssignedTo" name="AssignedTo" class="form-control classification-select" >
                                        @*<option value="-1" selected="selected">Select Employee</option>*@
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Assign Date</label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="AssignDate" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="date" value="">
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Finish Date</label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="EndDate" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="date" value="">
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Priority </label> <span style="color:red">*</span>
                                <div class="form-group u-select--v3 g-pos-rel g-brd-gray-light-v7 g-rounded-4 mb-0">
                                    <select id="Priority" name="Effect" class="form-control classification-select">

                                        <option selected="selected"> Select Priority  </option>
                                        <option value="High">High</option>
                                        <option value="Medium"> Medium </option>
                                        <option value="Low"> Low </option>

                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Status </label> <span style="color:red">*</span>
                                <div class="form-group u-select--v3 g-pos-rel g-brd-gray-light-v7 g-rounded-4 mb-0">
                                    <select id="Status" name="Effect" class="form-control classification-select">

                                        <option selected="selected"> Select Priority  </option>
                                        <option value="InProgress">InProgress</option>
                                        <option value="Stuck"> Stuck </option>
                                        <option value="Completed">Completed</option>
                                        <option value="NotDone"> NotDone </option>

                                    </select>
                                </div>
                            </div>
                        </div>



                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Assigned Percentage </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="AssignedPercentage" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="number" placeholder=" Enter Assigned Percentage">
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Completed Percentage </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="CompletedPercentage" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="number" placeholder=" Enter Completed Percentage">
                                </div>
                            </div>
                        </div>


                        <div class="col-sm-12 col-md-2">
                            <div class="form-check">
                                <label class="form-check-label">
                                    <input type="checkbox" class="form-check-input" checked="" id="Activechk">
                                    Active
                                </label>
                            </div>
                        </div>
                    </div>


                </div>
                <div class="modal-footer" id="divAddTask">
                    <button type="button" class="btn btn-inverse-primary u-btn-3d  my-auto ml-auto" id="AddTask" onclick="SaveData();"><i class="fas fa-plus tm-fa-plus"></i>Add</button>
                </div>
            </div>
        </div>
    </div>



    <!-- Country List -->
    <div class="row">
        <div class="col-12">
            <h4 class="all-md">Departmental Key Objectives List</h4> 
            <hr />
            @*<button type="button" class="btn btn-inverse-primary u-btn-3d  d-block ml-auto" data-toggle="modal" data-target="#DeductionModal" onclick="clearfields()"><i class="fas fa-plus tm-fa-plus"></i> Create</button>*@

            <button type="button" class="btn btn-inverse-primary u-btn-3d  d-block ml-auto" onclick="Create();"><i class="fas fa-plus tm-fa-plus"></i> Create</button>
            <div class="table-responsive-xl table-bordered cell-border g-mb-40" id="AllDeductionList"></div>

                <div id="divAddTask">

                    <button id="viewDetails" type="button" style="display:none;" class="btn btn-primary" onclick="viewDetails();"> View Details</button>

                </div>
        </div>
    </div>

    @*<div>
            <button class="btn btn-md btn-primary"
                    id="addBtn" type="button">
                Add new Row
            </button>
        </div>*@
    <!-- Country List ends -->
    <!-- container-scroller -->
</div>



<!--<div style="margin-left:93px;margin-top:20px;">

    <div id="divAddTask">

        <button id="viewDetails" type="button" style="display:none;" class="btn btn-primary" onclick="viewDetails();"> View Details444 </button>-->

        @*<a on>View Details</a>*@
    <!--</div>

</div>-->




@section scripts{
    <!-- base:js -->
    <script src="~/Content/Assets/vendors/base/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- inject:js -->
    <script src="~/Content/Assets/js/off-canvas.js"></script>
    <script src="~/Content/Assets/js/hoverable-collapse.js"></script>
    <script src="~/Content/Assets/js/template.js"></script>
    <script src="~/Content/Assets/js/settings.js"></script>
    <!-- endinject -->
    <script src="~/Content/Assets/js/todolist.js"></script>

    <!-- plugin js for this page -->
    @*
        <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

        <script src="//cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>*@

    <script src="~/Content/Assets/vendors/datatables.net/jquery.dataTables.js"></script>
    <script src="~/Content/Assets/vendors/datatables.net-bs4/dataTables.bootstrap4.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="~/Content/Assets/vendors/select2/select2.min.js"></script>
    <!-- End plugin js for this page -->
    <!-- Custom js for this page-->
    @*
        <script src="~/Content/Assets/js/data-table.js"></script>*@
    <!-- End custom js for this page-->

    <script>

        $(document).ready(function () {
            $("#AddTask").show();
            $(".updateTask").hide();
            LoadingEmployeeCostDetails();
           /* GetEmployeeId();*/
            GetDepartmentList();
        });

        function Create() {

            debugger;

            clearfields();

            $("#DeductionModal").modal('show');
        }


        function viewDetails() {

            debugger;

            var deptValue = document.getElementById("departmentName").value;

            ///alert(deptValue);

            window.location.href = "/Performance/KeyResults?deptName=" + deptValue;


        }


        //$('#AssignedTo').select2({
        //    selectOnClose: true
        //});

        //$('#DepId').select2({
        //    selectOnClose: true
        //});

        //$('#Priority').select2({
        //    selectOnClose: true
        //});
        //$('#Status').select2({
        //    selectOnClose: true
        //});

        function LoadingEmployeeCostDetails() {

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Performance/GetKeyObjectiveList",
                success: onSuccessEmployeeCostDetails,
                error: function (error) {

                },
                cache: false
            });
        }
        function onSuccessEmployeeCostDetails(data) {

            debugger;

            console.log(data);

            if (data.length > 0) {

                $("#viewDetails").css('display', 'block');
            }
            else {
                $("#viewDetails").css('display', 'none');
            }
            
            $("#AllDeductionList").empty();
            $("#AllDeductionList").append("<table id='AllCountrydatadetailTable' class='table u-table--v3 g-color-black'>");
            $("#AllCountrydatadetailTable").empty();
            $("#AllCountrydatadetailTable").append("<thead>" +
                "<tr class='ob_gC'>" +
                "<th> Objective </th>" +
                "<th> Assigned To  </th>" +
                //"<th> TimeLine </th>" +
                "<th> Priority </th>" +
                "<th> Status </th>" +
                "<th> Assigned Percentage </th>" +
                "<th> Completed Percentage </th>" +
                "<th class='last-td' style='width:35px'>Action</th> " +
                "</tr>" +
                "</thead>" +
                "<tbody id='values1'>");
            if (data.length > 0) {
                var val = '';

                for (var i = 0; i < data.length; i++) {

                    val = "<tr>" +
                        // "<td>" + <input /> + "</td>" +
                        "<td class='first-td'>" + data[i].DefineObjective + "</td>" +
                        "<td class='first-td'>" + data[i].EmployeeName + "</td>" +
                        "<td>" + data[i].Priority + "</td>" +
                        "<td>" + data[i].Status + "</td>" +
                        // "<td>" + data[i].AssignDate + "</td>" +
                        "<td>" + data[i].AssignedPercentage + "</td>" +
                        "<td>" + data[i].CompletedPercentage + "</td>" +

                        // "<td class='last-td'><a class='btn btn-default btn-sm' title='Edit' style='cursor: pointer;' onclick='LoadingEditData(" + data[i].Id + ")' data-toggle='modal' data-target='#DeductionModal'> Details </i></a > "


                    /* "<td class='last-td'><a class='btn btn-default btn-sm' title='Edit' style='cursor: pointer;' onclick='LoadingEditData(" + data[i].Id + ")' data-toggle='modal' data-target='#DeductionModal'><i class='fa fas fa-pencil'></i></a><a class='btn  btn-sm' title='Delete' style='cursor: pointer;' onclick = Delete(" + data[i].Id + ") > <i class='fa fa-trash'></i></a > "*/


                        "<td class='last-td'><a class='btn btn-default btn-sm' title='Edit' style='cursor: pointer;' onclick='LoadingEditData(" + data[i].Id + ")'><i class='fa fas fa-pencil'></i></a><a class='btn  btn-sm' title='Delete' style='cursor: pointer;' onclick = Delete(" + data[i].Id + ") > <i class='fa fa-trash'></i></a > "

                        //"<td class='last-td'><label class='form-check-inline u-check g-mr-20 mx-0 mb-0'> <input class='g-hidden-xs-up g-pos-abs g-top-0 g-right-0' id='btnEdit' onclick='LoadingEditData(" + data.data[i].pK_MetaDataID + ")' name = 'radGroup1_1' data-toggle='modal' data-target='#myModal'><i class='fa fa-pencil'></i></label ></td>" +
                        + "</tr></tbody>";


                    $('#values1').append(val);
                }
            }


            $('#AllCountrydatadetailTable').dataTable({
                "bProcessing": true,
                "bPaginate": true,
                "sPaginationType": "full_numbers",
                "responsive": true,
                "ordering": true
            });

        }

        function LoadingEditData(ID) {

            debugger;

            $("#DeductionModal").modal('show');

            GetDepartmentList();

            console.log(ID);

            Mode = "Update";
            $("#AddTask").hide();
            $(".updateTask").hide();
            $("#divAddTask").append(" <button type='button' class='btn btn-inverse-primary  my-auto ml-auto updateTask' id='updateTask' onclick='UpdateMetaData(" + ID + ");'>Update</button>");

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Performance/EditKeyObjective/" + ID,
                success: onSuccessMetaDetaDetails,

                error: function (error) {
                    alert("error", error);
                },
                cache: false

            });

        }

        function onSuccessMetaDetaDetails(data) {
            debugger;

            $("#DefineObjective").val(data.DefineObjective);
            $('#DepId').val(data.DepId);
            $('#DepId').prop("disabled", true);
            $('#AssignedTo').val(data.AssignedTo);
            $('#AssignDate').val(data.AssignDate);
            $('#EndDate').val(data.EndDate);
            $("#Priority").val(data.Priority);
            $("#Status").val(data.Status);
            $('#AssignedPercentage').val(data.AssignedPercentage);
            $('#CompletedPercentage').val(data.CompletedPercentage);
            $("#Activechk").prop('checked', data.Active);
        }

        function SaveData() {
            debugger;

            var DefineObjective = $("#DefineObjective").val();
            var DepId = $("#DepId").val();
            var AssignedTo = $("#AssignedTo").val();
            var AssignDate = $('#AssignDate').val();
            var EndDate = $('#EndDate').val();
            var Priority = $('#Priority').val();
            var Status = $('#Status').val();
            var AssignedPercentage = $('#AssignedPercentage').val();
            var CompletedPercentage = $('#CompletedPercentage').val();
            var Active = $('#Activechk').is(":checked");

            if (DefineObjective == null || DefineObjective == 'string' || !DefineObjective.trim()) {

                Swal.fire({
                    icon: 'warning',
                    dangerMode: true,
                    text: 'Please Add valid value!'
                });
                return false;
            }
            if (AssignedTo == null || AssignedTo == -1 || AssignedTo == "") {
                Swal.fire({
                    icon: 'warning',
                    text: 'Please Select EmployeeId!'
                });
                return false;
            }


            var Data = JSON.stringify(
                {
                    DefineObjective: DefineObjective,
                    DepId: DepId,
                    AssignedTo: AssignedTo,
                    AssignDate: AssignDate,
                    EndDate: EndDate,
                    Priority: Priority,
                    Status: Status,
                    AssignedPercentage: AssignedPercentage,
                    CompletedPercentage: CompletedPercentage,
                    Active: Active
                });
            $.ajax({
                type: "POST",
                data: Data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "/Performance/AddKeyObjective",
                success: onSuccessAddManagement,
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong to Insert new Record!',
                    });
                },
                cache: false
            });

        }

        function onSuccessAddManagement(data) {
            debugger;

            Swal.fire({
                icon: 'info',
                title: 'Info',
                text: 'Saved Successfully.',
            }).then(function () {
                //location.reload(true);

            });
            Mode = "";
            clearfields();
            $("#DeductionModal").modal("hide");
            LoadingEmployeeCostDetails();
        }

        function UpdateMetaData(ID) {
            debugger;
            Mode = "Update";
            var DefineObjective = $("#DefineObjective").val();
            var DepId = $("#DepId").val();
            var AssignedTo = $("#AssignedTo").val();
            var AssignDate = $('#AssignDate').val();
            var EndDate = $('#EndDate').val();
            var Priority = $('#Priority').val();
            var Status = $('#Status').val();
            var AssignedPercentage = $('#AssignedPercentage').val();
            var CompletedPercentage = $('#CompletedPercentage').val();
            var Active = $('#Activechk').is(":checked");

            var Data = JSON.stringify(
                {
                    Id: ID,
                    DefineObjective: DefineObjective,
                    DepId: DepId,
                    AssignedTo: AssignedTo,
                    AssignDate: AssignDate,
                    EndDate: EndDate,
                    Priority: Priority,
                    Status: Status,
                    AssignedPercentage: AssignedPercentage,
                    CompletedPercentage: CompletedPercentage,
                    Active: Active

                });

            $.ajax({
                type: "POST",
                data: Data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "/Performance/UpdateKeyObjective",
                success: onSuccessUpdateManagement,
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong to Insert new Reord!',
                    });
                },
                cache: false,
            });
        }
        function onSuccessUpdateManagement(data) {

            $("#DeductionModal").modal('hide');

            Swal.fire({
                icon: 'info',
                title: 'Info',
                text: 'Saved Successfully.',
            }).then(function () {
                //location.reload(true);
            });
            Mode = "";
            clearfields();
            LoadingEmployeeCostDetails();
        }


        function Delete(ID) {
            if (confirm('Are you sure to Delete this record ?')) {

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: "/Performance/DeleteKeyObjective/" + ID,
                    success: function (data) {

                        LoadingEmployeeCostDetails();

                    }

                });
            }
        }

        //function GetEmployeeId() {

        //    $.ajax({
        //        type: "GET",
        //        contentType: "application/json; charset=utf-8",
        //        url: "/EmployeeProfile/Employeesddl",
        //        success: function (data) {

        //            if (data != 0) {

        //                $('#AssignedTo').empty();
        //                $('#AssignedTo').append('<option value="-1" selected disabled>Select Employee</option>');
        //                $.each(data, function (i, tweet) {
        //                    $('#AssignedTo').append('<option value="' + data[i].Id + '">' + data[i].Name + '</option>');
        //                });
        //            }
        //        },
        //        error: function (error) {
        //            Swal.fire({
        //                icon: 'error',
        //                title: 'Oops...',
        //                text: 'Something went wrong!',
        //            });
        //        },
        //        cache: false,

        //    });
        //}

        function GetDepartmentList() {

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Performance/DepartmentList",
                success: function (data) {

                    if (data != 0) {

                        $('#DepId').empty();
                        $('#DepId').append('<option value="-1" selected disabled>Select Department</option>');
                        $.each(data, function (i, value) {
                            $('#DepId').append('<option value="' + data[i].Id + '">' + data[i].Name + '</option>');

                        });

                    }

                },
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                },
                cache: false,

            });
        }


        function clearfields() {
            $(".updateTask").hide();
            $("#AddTask").show();
            $('#DepId').prop("disabled", false);
            $("#DefineObjective").val("");
            //$("#AssignedTo").val("-1").select2();
            //$("#Priority").val("-1").select2();
            //$("#Status").val("-1").select2();
            $("#AssignDate").val("");
            $("#EndDate").val("");
            $("#AssignedPercentage").val("");
            $("#CompletedPercentage").val("");
        }


        function DeptChange(btn) {

            debugger;

            var JobId = btn.value;

            document.getElementById("departmentName").value = btn.value;

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: { "DepName": JobId },
                url: "/Performance/GetKeyObjectiveForDepartment",
                success: function (data) {

                    debugger;

                    onSuccessEmployeeCostDetails(data);
                },
                error: function (error) {

                },
                cache: false
            });
        }

       


        function DepartmentsChange() {
            var Id = document.getElementById("DepId").value;
            $('#AssignedTo').empty();
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: { "Id": Id },
                url: "/EmployeeProfile/DepartmentChange",
                success: function (data) {
                    if (data != "") {


                        $('#AssignedTo').append('<option value="-1" selected disabled> Select Employee </option>');
                        $.each(data, function (i, tweet) {
                            $('#AssignedTo').append('<option value="' + data[i].Id + '">' + data[i].FirstName + " " + data[i].LastName + '</option>');

                        });

                    }

                },
                error: function (error) {

                },
                cache: false
            });




        }
                    //function isNumberKey(evt) {
                    //    var charCode = (evt.which) ? evt.which : evt.keyCode;
                    //    if (charCode != 46 && charCode > 31
                    //        && (charCode < 48 || charCode > 57))
                    //        return false;

                    //    return true;
                    //}


                    //function EmployeeChange() {


                    //    var JobId = document.getElementById("EmployeeId").value;

                    //    $.ajax({
                    //        type: "GET",
                    //        contentType: "application/json; charset=utf-8",
                    //        data: { "JobId": JobId },
                    //        url: "/PayRoll/EmployeeChangeSalarySetup",
                    //        success: function (data) {
                    //            AutoFillTextBox(data);

                    //        },
                    //        error: function (error) {

                    //        },
                    //        cache: false
                    //    });


                    //}

                    //function AutoFillTextBox(data) {
                    //    for (const element of data) {

                    //        $('#EmployeeNumber').val(element.EmployeeNumber);
                    //        $("#Designation").val(element.Designation).attr('disabled', 'disabled');
                    //        $("#Department").val(element.Department).attr('disabled', 'disabled');
                    //        $("#BasicSalary").val(element.BasicSalary).attr('disabled', 'disabled');

                    //    }
                    //}

        //function EmployeeChange(vaue) {

        //    debugger;

        //    console.log(value);
        //}


    </script>

}
