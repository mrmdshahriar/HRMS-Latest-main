
@{
    ViewBag.Title = "SalarySetup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- base:css -->
<link rel="stylesheet" href="~/Content/Assets/vendors/mdi/css/materialdesignicons.min.css">
<link rel="stylesheet" href="~/Content/Assets/vendors/base/vendor.bundle.base.css">

<!-- endinject -->
<!-- plugin css for this page -->
@*
    <link href="https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />*@
<link href="~/Content/Assets/vendors/datatables.net-bs4/dataTables.bootstrap4.css" rel="stylesheet" />

<!-- End plugin css for this page -->
<!-- inject:css -->
<link href="~/Content/Assets/css/vertical-layout-light/style.css" rel="stylesheet" />

<link href="~/Content/Assets/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<link href="~/Content/Assets/css/Country.css" rel="stylesheet" />
<br />
<br />

@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.8.1/css/bootstrap-select.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.8.1/js/bootstrap-select.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>*@

@*<script>
    $('select').selectpicker();
</script>*@

<style>
    .multiselect {
        width: 100%;
    }

    .selectBox {
        position: relative;
    }

        .selectBox select {
            width: 100%;
        }

    .overSelect {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
    }

    #mySelectOptions {
        display: none;
        border: 0.5px #7c7c7c solid;
        background-color: #ffffff;
        max-height: 150px;
        overflow-y: scroll;
    }

        #mySelectOptions label {
            display: block;
            font-weight: normal;
            display: block;
            white-space: nowrap;
            min-height: 1.2em;
            background-color: #ffffff00;
            padding: 0 2.25rem 0 .75rem;
            /* padding: .375rem 2.25rem .375rem .75rem; */
        }

            #mySelectOptions label:hover {
                background-color: #1e90ff;
            }
</style>

<div class="container">
    <!-- Button trigger modal -->
    @*<div class="row my-3">
            <div class="col-sm-12">
                <button type="button" class="btn btn-inverse-primary u-btn-3d  d-block ml-auto" data-toggle="modal" data-target="#CountryModal" onclick="clearfields()"><i class="fas fa-pen md-fa-pen"></i> Create</button>
            </div>
        </div>*@


    @*<button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#CountryModal" onclick="clearfields()"><i class="fas fa-pen md-fa-pen"></i> Create</button>*@

    <!-- Modal -->
    <div class="modal fade" id="DeductionModal" tabindex="-1" role="dialog" aria-labelledby="CountryModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header modal-header">
                    <h4 class="modal-title" style="color:white">Add/Update Deduction</h4>
                    <button type="button" class="close" data-dismiss="modal">×</button>
                </div>
                <div class="modal-body">


                    @*<select class="selectpicker" multiple data-live-search="true">
                        <option>Mustard</option>
                        <option>Ketchup</option>
                        <option>Relish</option>
                    </select>*@




                    <div class="row">

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 bg-classification" for="inputGroupStatus">Employee</label> <span style="color:red">*</span>
                                <div class="form-group u-select--v3 g-pos-rel g-brd-gray-light-v7 g-rounded-4 mb-0">
                                    <select id="EmployeeId" name="EmployeeId" class="form-control classification-select" onchange="EmployeeChange(this.value)">
                                        <option value="-1" selected="selected">Select Employee</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Employee Number </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="EmployeeNumber" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="text" placeholder=" Enter Employee Number" readonly>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Designation </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="Designation" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="text" placeholder=" Enter Designation" readonly>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Department </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="Department" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="text" placeholder=" Enter Department" readonly>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Basic Salary </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="BasicSalary" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="text" placeholder=" Enter BasicSalary" readonly>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 bg-classification" for="inputGroupStatus">Allowance</label> <span style="color:red">*</span>
                                <div class="form-group u-select--v3 g-pos-rel g-brd-gray-light-v7 g-rounded-4 mb-0">
                                    <select id="AllowanceId" name="AllowanceId" class="form-control classification-select" multiple="multiple" style="max-height: 200px; overflow: scroll; " onchange="AllowanceChange()">
                                        <option value="-1" selected="selected">Select</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-sm-12" style="display:none">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Allowances </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="Allowances" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="text" value="0" placeholder="Enter Allowances">
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Gross Salary </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="TotalAmount" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="number" value=0>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-group">
                                    <input type="checkbox" class="form-check-input" id="overTime" name="overTime">
                                    Is Eligible for Overtime
                                </label>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-2" style="display:none">
                            <div class="form-check">
                                <label class="form-check-label">
                                    <input type="checkbox" class="form-check-input" checked="" id="Activechk">
                                    Active
                                </label>
                            </div>
                        </div>
                    </div>


                </div>
                <div class="modal-footer" id="divAddTask">
                    <button type="button" class="btn btn-inverse-primary u-btn-3d  my-auto ml-auto" id="AddTask" onclick="SaveData();"><i class="fas fa-plus tm-fa-plus"></i>Add</button>
                </div>
            </div>
        </div>
    </div>



    <!-- Country List -->
    <div class="row">
        <div class="col-12">
            <h3 class="all-md">Salary Setups List</h3>
            <hr />
            <button type="button" class="btn btn-inverse-primary u-btn-3d  d-block ml-auto" data-toggle="modal" data-target="#DeductionModal" onclick="clearfields()"><i class="fas fa-plus tm-fa-plus"></i> Create</button>
            <br />
            <div class="table-responsive-xl table-bordered cell-border g-mb-40" id="AllDeductionList"></div>
        </div>
    </div>
    <!-- Country List ends -->
    <!-- container-scroller -->
</div>


@section scripts{
    <!-- base:js -->
    <script src="~/Content/Assets/vendors/base/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- inject:js -->
    <script src="~/Content/Assets/js/off-canvas.js"></script>
    <script src="~/Content/Assets/js/hoverable-collapse.js"></script>
    <script src="~/Content/Assets/js/template.js"></script>
    <script src="~/Content/Assets/js/settings.js"></script>
    <!-- endinject -->
    <script src="~/Content/Assets/js/todolist.js"></script>

    <!-- plugin js for this page -->
    @*
        <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

        <script src="//cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>*@

    <script src="~/Content/Assets/vendors/datatables.net/jquery.dataTables.js"></script>
    <script src="~/Content/Assets/vendors/datatables.net-bs4/dataTables.bootstrap4.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="~/Content/Assets/vendors/select2/select2.min.js"></script>
    <!-- End plugin js for this page -->
    <!-- Custom js for this page-->
    @*
        <script src="~/Content/Assets/js/data-table.js"></script>*@
    <!-- End custom js for this page-->
  
    <script>

        $(document).ready(function () {
                    $("#AddTask").show();
                    $(".updateTask").hide();
                    LoadingEmployeeCostDetails();
                    GetEmployeeId();
                    GetAllowanceId();
            
                });

                function AllowanceChange() {
                
              
                    var AllowanceId = $('#AllowanceId').val();
                    var lastItem = AllowanceId.pop();

                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: "/PayRoll/AllowanceChange/" + lastItem,
                    success: onSuccessAllowanceChange,

                    error: function (error) {
                        alert("error", error);
                    },
                    cache: false

                });

            }

                function onSuccessAllowanceChange(data)
                {
                    debugger
                    var BasicSalary = $("#BasicSalary").val();
                    var TotalAmount = $("#TotalAmount").val();
                    if (TotalAmount == "") {
                        TotalAmount = 0;
                        TotalAmount = parseInt(TotalAmount);
                    }
                    else {
                        TotalAmount = parseInt(TotalAmount);
                    }
                    var Effect = data.Effect;
                    var Amount = data.Amount;
                    var Percentage = data.Percentage;
                    BasicSalary = parseInt(BasicSalary);
                    Amount = parseInt(Amount);
                    
                    
                    
                    Percentage = parseInt(Percentage);
                    var calvalue = "";
                    if (TotalAmount == 0) {
                        if (Effect == "Add") {
                            if (Amount > 0) {                             
                                calvalue = BasicSalary + Amount;
                                $("#TotalAmount").val(calvalue);
                            }
                            if (Percentage > 0) {
                                calvalue = BasicSalary * Percentage / 100 + BasicSalary;
                                $("#TotalAmount").val(calvalue);
                            }

                        }
                        if (Effect == "Less") {
                            if (Amount > 0) {
                                calvalue = BasicSalary - Amount;
                                $("#TotalAmount").val(calvalue);
                            }
                            if (Percentage > 0) {
                                calvalue = BasicSalary * Percentage / 100 - BasicSalary;
                                $("#TotalAmount").val(calvalue);
                            }
                        }                        
                    }
                    else {
                        if (Effect == "Add") {
                            if (Amount > 0) {
                                calvalue = TotalAmount + Amount;
                                $("#TotalAmount").val(calvalue);
                            }
                            if (Percentage > 0) {
                                calvalue = BasicSalary * Percentage / 100 ;
                                $("#TotalAmount").val(calvalue + TotalAmount);
                            }

                        }
                        if (Effect == "Less") {
                            if (Amount > 0) {
                                calvalue = TotalAmount - Amount;
                                $("#TotalAmount").val(calvalue);
                            }
                            if (Percentage > 0) {
                                calvalue = BasicSalary * Percentage / 100 ;
                                $("#TotalAmount").val(TotalAmount + calvalue);
                            }
                        }
                    }
                }

        $('#EmployeeId').select2({
            selectOnClose: true
        });

        $('#AllowanceId').select2({
            selectOnClose: true
        });
       
        function LoadingEmployeeCostDetails() {
            
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/PayRoll/GetSalarySetupList",
                success: onSuccessEmployeeCostDetails,
                error: function (error) {

                },
                cache: false
            });
        }
        function onSuccessEmployeeCostDetails(data) {
            $("#AllDeductionList").empty();
            $("#AllDeductionList").append("<table id='AllCountrydatadetailTable' class='table u-table--v3 g-color-black'>");
            $("#AllCountrydatadetailTable").empty();
            $("#AllCountrydatadetailTable").append("<thead>" +
                "<tr class='ob_gC'>" +
                "<th>Employee Name</th>" +
                "<th> Designation </th>" +
                "<th> Department </th>" +
               /* "<th> Allowances  </th>" +*/
                "<th> Total Amount </th>" +
              
                "<th class='last-td' style='width:35px'>Action</th> " +
                "</tr>" +
                "</thead>" +
                "<tbody id='values1'>");
            if (data.length > 0) {
                var val = '';

                for (var i = 0; i < data.length; i++) {
                    val = "<tr>" +
                        "<td class='first-td'>" + data[i].EmployeeName + "</td>" +
                        "<td>" + data[i].Designation + "</td>" +
                        "<td>" + data[i].Department + "</td>" +
                      /*  "<td>" + data[i].AllowanceId + "</td>" +*/
                        "<td>" + data[i].TotalAmount + "</td>" +
                       
                        "<td class='last-td'><a class='btn btn-default btn-sm' title='Edit' style='cursor: pointer;' onclick='LoadingEditData(" + data[i].Id + ")' data-toggle='modal' data-target='#DeductionModal'><i class='fa fas fa-pencil'></i></a><a class='btn  btn-sm' title='Delete' style='cursor: pointer;' onclick = Delete(" + data[i].Id + ") > <i class='fa fa-trash'></i></a > "
                        // "<td class='last-td'><label class='form-check-inline u-check g-mr-20 mx-0 mb-0'> <input class='g-hidden-xs-up g-pos-abs g-top-0 g-right-0' id='btnEdit' onclick='LoadingEditData(" + data.data[i].pK_MetaDataID + ")' name = 'radGroup1_1' data-toggle='modal' data-target='#myModal'><i class='fa fa-pencil'></i></label ></td>" +
                        + "</tr></tbody>";


                    $('#values1').append(val);
                }
            }


            $('#AllCountrydatadetailTable').dataTable({
                "bProcessing": true,
                "bPaginate": true,
                "sPaginationType": "full_numbers",
                "responsive": true,
                "ordering": true
            });

        }

        function LoadingEditData(ID) {
            console.log(ID);
            Mode = "Update";
            $("#AddTask").hide();
            $(".updateTask").hide();
            $("#divAddTask").append(" <button type='button' class='btn btn-inverse-primary  my-auto ml-auto updateTask' id='updateTask' onclick='UpdateMetaData(" + ID + ");'>Update</button>");

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/PayRoll/EditSalarySetup/" + ID,
                success: onSuccessMetaDetaDetails,

                error: function (error) {
                    alert("error", error);
                },
                cache: false

            });

        }

        
        function onSuccessMetaDetaDetails(data) {
            debugger
            for (const element of data) {
                $('#AllowanceId').val(element.AllowanceId);


                $("#TotalAmount").val(element.TotalAmount);
                $('#EmployeeId').val(element.EmployeeId).select2();
                $("#EmployeeNumber").val(element.EmployeeNumber);
                $("#BasicSalary").val(element.BasicSalary);
                $("#Designation").val(element.Designation);
                $("#Department").val(element.Department);
                //$("#AllowanceId").val(element.AllowanceId);
                //document.getElementById("AllowanceId").innerHTML = element.AllowanceId;

                $('#AllowanceId').val(element.AllowanceId).select2();
                var overTime1 = $('#overTime').is(":checked");
                if (element.OverTime == true) {
                   
                    overTime1.click = true;
                    //document.getElementById('OverTime').checked = true;
                    //$("#OverTime").attr("checked", true);
                    //document.getElementById('checked').click();
                  
                }
               
            }

            $("#Activechk").prop('checked', data.Active);
        }
        function SaveData() {
            debugger
            var AllowanceId = $("#AllowanceId").val();
            var TotalAmount = $("#TotalAmount").val();
            var EmployeeId = $('#EmployeeId').val();
            var AllowanceId = $('#AllowanceId').val();
            //for (var sum = 0, i = 0; i < AllowanceId.length; i++) {
            //    AllowanceId += AllowanceId[i];
            //}
            
           
            var overTime = $('#overTime').is(":checked");
            var Active = $('#Activechk').is(":checked");
            //if (Allowances == null || Allowances == 'string' || !Allowances.trim()) {

            //    Swal.fire({
            //        icon: 'warning',
            //        dangerMode: true,
            //        text: 'Please Add valid value!'
            //    });
            //    return false;
            //}
            if (EmployeeId == null || EmployeeId == -1 || EmployeeId == "") {
                Swal.fire({
                    icon: 'warning',
                    text: 'Please Select EmployeeId!'
                });
                return false;
            }

            if (AllowanceId == null || AllowanceId == -1 || AllowanceId == "") {
                Swal.fire({
                    icon: 'warning',
                    text: 'Please Select AllowanceId!'
                });
                return false;
            }
            var asid = AllowanceId.toString();
            var Data = JSON.stringify(
                {
                    AllowanceId: asid,
                    TotalAmount: TotalAmount,
                    EmployeeId: EmployeeId,
                    overTime: overTime,
                    Active: Active
                });
            $.ajax({
                type: "POST",
                data: Data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "/PayRoll/AddSalarySetup",
                success: onSuccessAddManagement,
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong to Insert new Record!',
                    });
                },
                cache: false
            });

        }

        function onSuccessAddManagement(data) {
            Swal.fire({
                icon: 'info',
                title: 'Info',
                text: 'Your work has been Save.',
            }).then(function () {
                location.reload(true);
            });
            Mode = "";
            clearfields();

            LoadingEmployeeCostDetails();

        }

        function UpdateMetaData(ID) {
            Mode = "Update";
            var AllowanceId = $("#AllowanceId").val();
            var TotalAmount = $('#TotalAmount').val();
            var EmployeeId = $('#EmployeeId').val();
            var AllowanceId = $('#AllowanceId').val();
            var overTime = $('#overTime').is(":checked");
            var Active = $('#Activechk').is(":checked");
            var asid = AllowanceId.toString();
            var Sid = ID;
            var Data = JSON.stringify(
                {
                    Id: Sid,
                    AllowanceId: AllowanceId,
                    TotalAmount: TotalAmount,
                    EmployeeId: EmployeeId,
                    AllowanceId: asid,
                    overTime: overTime,
                    Active: Active

                });
            /* $("#CountryModal").modal('hide')*/
            $.ajax({
                type: "POST",
                data: Data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "/PayRoll/UpdateSalarySetup",
                success: onSuccessUpdateManagement,
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong to Insert new Reord!',
                    });
                },
                cache: false,
            });
        }
        function onSuccessUpdateManagement(data) {
            Swal.fire({
                icon: 'info',
                title: 'Info',
                text: 'Your work has been Save.',
            }).then(function () {
                location.reload(true);
            });
            Mode = "";
            clearfields();

            LoadingEmployeeCostDetails();

        }


        function Delete(ID) {
            if (confirm('Are you sure to Delete this record ?')) {

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: "/PayRoll/DeleteSalarySetup/" + ID,
                    success: function (data) {

                        LoadingEmployeeCostDetails();

                    }

                });
            }
        }

        function GetEmployeeId() {
            
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/EmployeeProfile/Employeesddl",
                success: function (data) {

                    if (data != 0) {

                        $('#EmployeeId').empty();
                        $('#EmployeeId').append('<option value="-1" selected disabled>Select Employee</option>');
                        $.each(data, function (i, tweet) {
                            $('#EmployeeId').append('<option value="' + data[i].Id + '">' + data[i].Name + '</option>');

                        });

                    }

                },
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                },
                cache: false,

            });
        }

        function GetAllowanceId() {
            
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/PayRoll/Allowanceddl",
                success: function (data) {

                    if (data != 0) {

                        $('#AllowanceId').empty();
                      /*  $('#AllowanceId').append('<option value="-1" selected disabled>Select Allowance</option>');*/
                        $.each(data, function (i, tweet) {
                            $('#AllowanceId').append('<option value="' + data[i].Id + '">' + data[i].Name + '</option>');

                        });

                    }

                },
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                },
                cache: false,

            });
        }

        function clearfields() {
            $(".updateTask").hide();
            $("#AddTask").show();
            $("#Allowances").val("");
            $("#EmployeeId").val("-1").select2();
            $("#AllowanceId").val("-1").select2();
            $("#TotalAmount").val("");
            $("#EmployeeNumber").val("");
            $("#Designation").val("");
            $("#Department").val("");
            $("#BasicSalary").val("");

        }

        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }


        function EmployeeChange() {


            var JobId = document.getElementById("EmployeeId").value;

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: { "JobId": JobId },
                url: "/PayRoll/EmployeeChangeSalarySetup",
                success: function (data) {
                    AutoFillTextBox(data);

                },
                error: function (error) {

                },
                cache: false
            });


        }

        function AutoFillTextBox(data) {
            for (const element of data) {

                $('#EmployeeNumber').val(element.EmployeeNumber);
                $("#Designation").val(element.Designation).attr('disabled', 'disabled');
                $("#Department").val(element.Department).attr('disabled', 'disabled');
                $("#BasicSalary").val(element.BasicSalary).attr('disabled', 'disabled');


            }


        }

        

    </script>


  


}

