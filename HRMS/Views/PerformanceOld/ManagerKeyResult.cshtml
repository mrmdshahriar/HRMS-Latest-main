@using HRMS.Models
@{
    ViewBag.Title = "ManagerKeyResult";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2 style="margin-top:20px;margin-left:50px">Manager Key Result</h2>




<!-- base:css -->
<link rel="stylesheet" href="~/Content/Assets/vendors/mdi/css/materialdesignicons.min.css">
<link rel="stylesheet" href="~/Content/Assets/vendors/base/vendor.bundle.base.css">

<!-- endinject -->
<!-- plugin css for this page -->
@*
    <link href="https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />*@
<link href="~/Content/Assets/vendors/datatables.net-bs4/dataTables.bootstrap4.css" rel="stylesheet" />

<!-- End plugin css for this page -->
<!-- inject:css -->
<link href="~/Content/Assets/css/vertical-layout-light/style.css" rel="stylesheet" />

<link href="~/Content/Assets/vendors/font-awesome/css/font-awesome.min.css" rel="stylesheet" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<link href="~/Content/Assets/css/Country.css" rel="stylesheet" />

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />




<div class="container">
    <!-- Button trigger modal -->
    @*<div class="row my-3">
            <div class="col-sm-12">
                <button type="button" class="btn btn-inverse-primary u-btn-3d  d-block ml-auto" data-toggle="modal" data-target="#CountryModal" onclick="clearfields()"><i class="fas fa-pen md-fa-pen"></i> Create</button>
            </div>
        </div>*@


    @*<button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#CountryModal" onclick="clearfields()"><i class="fas fa-pen md-fa-pen"></i> Create</button>*@

    <center>
        <div>
            <h3>Departments</h3>

            <div>
                @foreach (var dept in (List<Department>)ViewBag.deptName)
                {

                    @*<button id="GetDeptChange" onclick="DeptChange();" btn btn-link>@dept.Name </button>*@

                    <input type="button" class="btn btn-primary" value="@dept.Name" onclick="DeptChange(this);" />
                }
                <input id="departmentName" type="hidden" value="" />
            </div>

        </div>
    </center>


    <!-- Modal -->
    <div class="modal fade" id="DeductionModal" tabindex="-1" role="dialog" aria-labelledby="CountryModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header modal-header">
                    <h4 class="modal-title" style="color:white">Update Employee Key Results</h4>
                    <button type="button" class="close" data-bs-dismiss="modal">×</button>
                </div>
                <div class="modal-body">

                    <div class="row">

                        <input type="hidden" value="" id="EmployeeResultsId" />

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Define Key Result </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="DefineKeyResult" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="text" placeholder=" Enter Objective">
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Status </label> <span style="color:red">*</span>
                                <div class="form-group u-select--v3 g-pos-rel g-brd-gray-light-v7 g-rounded-4 mb-0">
                                    <select id="Status" name="Effect" class="form-control classification-select">

                                        <option selected="selected"> Select Priority  </option>
                                        <option value="InProgress">InProgress</option>
                                        <option value="Stuck"> Stuck </option>
                                        <option value="Completed">Completed</option>
                                        <option value="NotDone"> NotDone </option>

                                    </select>
                                </div>
                            </div>
                        </div>


                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Completed Percentage </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="CompletedPercentage" class="form-control form-control-md g-brd-gray-light-v7 g-brd-gray-light-v3--focus g-rounded-4 g-px-14 g-py-10 md-name-input" type="number" placeholder=" Enter Completed Percentage">
                                </div>
                            </div>
                        </div>


                        <div class="col-sm-12 col-md-2">
                            <div class="form-check">
                                <label class="form-check-label">
                                    <input type="checkbox" class="form-check-input" checked="" id="Activechk">
                                    Active
                                </label>
                            </div>
                        </div>
                    </div>


                </div>
                <div class="modal-footer" id="divAddTask">
                    <button type="button" class="btn btn-inverse-primary u-btn-3d  my-auto ml-auto" id="AddTask" onclick="SaveData();"><i class="fas fa-plus tm-fa-plus"></i>Update</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Modal -->
    <div class="modal fade" id="ManagerKeyResultModal" tabindex="-1" role="dialog" aria-labelledby="CountryModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header modal-header">
                    <h4 class="modal-title" style="color:white">Add/Update Manager Key Results</h4>
                    <button type="button" class="close" data-bs-dismiss="modal">X</button>
                </div>
                <div class="modal-body">

                    <div class="row">

                        <input type="hidden" value="" id="Id" />

                        @*<input type="hidden" value="" id="EmpId" />*@

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 bg-classification" for="inputGroupStatus">Employee</label> <span style="color:red">*</span>
                                <div class="form-group u-select--v3 g-pos-rel g-brd-gray-light-v7 g-rounded-4 mb-0">
                                    <select id="EmpId" name="EmpId" class="form-control classification-select">
                                        <option value="-1" selected="selected">Select Employee</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Date Of Joining </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="DateOfJoining" class="form-control" type="date" placeholder="DateOfJoining" value="">
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1"> Gross Salary </label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="GrossSalary" class="form-control" type="number" placeholder="GrossSalary">
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-check">
                                <label class="form-check-label">
                                    Fit For Promotion
                                    <input type="checkbox" class="form-check-input" id="FitForPromotion">
                                </label>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-check">
                                <label class="form-check-label">
                                    Fit In Current Possition
                                    <input type="checkbox" class="form-check-input" id="FitInCurrentPossition">
                                </label>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-check">
                                <label class="form-check-label">
                                    Not Fit For Promotion But Likely To Become
                                    <input type="checkbox" class="form-check-input" id="NotFitForPromotionButLikelyToBecome">
                                </label>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-check">
                                <label class="form-check-label">
                                    Unfit For Promotion Has Reached His Ceiling
                                    <input type="checkbox" class="form-check-input" id="UnfitForPromotionHasReachedHisCeiling">
                                </label>
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-check">
                                <label class="form-check-label">
                                    Eligible For Bonus
                                    <input type="checkbox" class="form-check-input" id="EligibleForBonus">
                                </label>
                            </div>
                        </div>


                        <div class="col-sm-12">
                            <div class="form-group g-mb-30">
                                <label class="g-mb-10 md-name" for="inputGroup-1_1">Eligible For Increment Percentage</label> <span style="color:red">*</span>
                                <div class="g-pos-rel">
                                    <input id="EligibleForIncrementPercentage" class="form-control" type="number">
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-2">
                            <div class="form-check">
                                <label class="form-check-label">
                                    Active
                                    <input type="checkbox" class="form-check-input" id="Active">
                                </label>
                            </div>
                        </div>
                    </div>


                </div>
                <div class="modal-footer" id="divAddTask">
                    <button type="button" class="btn btn-inverse-primary u-btn-3d  my-auto ml-auto" id="Update" onclick="Update();"><i class="fas fa-plus tm-fa-plus"></i>Update</button>
                    <button type="button" class="btn btn-inverse-primary u-btn-3d  my-auto ml-auto" id="Save" onclick="SaveManagerKeyResults();"><i class="fas fa-plus tm-fa-plus"></i>Save</button>
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-12">
            @*<h4 class="all-md">Employee List</h4>*@
            <hr />
             <button type="button" class="btn btn-inverse-primary u-btn-3d  d-block ml-auto" onclick="CreateManagerKeyResults()"><i class="fas fa-plus tm-fa-plus"></i> Create</button>
             <div class="row">
                <div class="col-md-2" @*style="border:1px solid blue*@>
                    <div class="table-responsive-xl table-bordered cell-border g-mb-40" id="AllDeductionList"></div>
                </div>
                <div class="col-md-10" @*style="border:1px solid blue*@>
                    <div id="EmployeeKeyResults">

                    </div>

                    <div id="ManagerKeyResults">

                    </div>
                </div>

            </div>
        </div>

    </div>



    @*<div>
            <button class="btn btn-md btn-primary"
                    id="addBtn" type="button">
                Add new Row
            </button>
        </div>*@
    <!-- Country List ends -->
    <!-- container-scroller -->
</div>

@section scripts{
    <!-- base:js -->
    <script src="~/Content/Assets/vendors/base/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- inject:js -->
    <script src="~/Content/Assets/js/off-canvas.js"></script>
    <script src="~/Content/Assets/js/hoverable-collapse.js"></script>
    <script src="~/Content/Assets/js/template.js"></script>
    <script src="~/Content/Assets/js/settings.js"></script>
    <!-- endinject -->
    <script src="~/Content/Assets/js/todolist.js"></script>

    <!-- plugin js for this page -->
    @*
        <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

        <script src="//cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>*@

    <script src="~/Content/Assets/vendors/datatables.net/jquery.dataTables.js"></script>
    <script src="~/Content/Assets/vendors/datatables.net-bs4/dataTables.bootstrap4.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="~/Content/Assets/vendors/select2/select2.min.js"></script>
    <!-- End plugin js for this page -->
    <!-- Custom js for this page-->
    @*
        <script src="~/Content/Assets/js/data-table.js"></script>*@
    <!-- End custom js for this page-->

    <script>

        $(document).ready(function () {
            $("#AddTask").show();
            $(".updateTask").hide();
            //LoadingEmployeeCostDetails();
            GetEmployeeId();
            GetDepartmentList();
        });

        function GetEmployeeIdForManagerKeyResultsModal() {

            debugger;

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Performance/Employeesddl",
                success: function (data) {

                    if (data != 0) {

                        $('#EmpId').empty();
                        $('#EmpId').append('<option value="-1" selected disabled>Select Employee</option>');
                        $.each(data, function (i, tweet) {
                            $('#EmpId').append('<option value="' + data[i].Id + '">' + data[i].Name + '</option>');
                        });
                    }
                },
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                },
                cache: false,

            });
        }


        function viewDetails() {

            debugger;

            var deptValue = document.getElementById("departmentName").value;

            ///alert(deptValue);

            window.location.href = "/Performance/KeyResults?deptName=" + deptValue;

        }


        $('#AssignedTo').select2({
            selectOnClose: true
        });
        $('#DepId').select2({
            selectOnClose: true
        });

        $('#Priority').select2({
            selectOnClose: true
        });
        $('#Status').select2({
            selectOnClose: true
        });

        function LoadingEmployeeCostDetails() {

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Performance/GetKeyResultsList",
                success: onSuccessEmployeeCostDetails,
                error: function (error) {

                },
                cache: false
            });
        }
        function onSuccessEmployeeCostDetails(data) {

            debugger;

            console.log(data);

            $("#AllDeductionList").empty();
            $("#AllDeductionList").append("<table style='width:20%' id='AllCountrydatadetailTable2' class='table u-table--v3 g-color-black'>");
            $("#AllCountrydatadetailTable2").empty();
            $("#AllCountrydatadetailTable2").append("<thead>" +
                "<tr class='ob_gC'>" +

                "<th > Employees List  </th>" +
                // "<th class='last-td' style='width:35px'>Action</th> " +
                "</tr>" +
                "</thead>" +
                "<tbody id='values1'>");
            if (data.length > 0) {
                var val = '';

                for (var i = 0; i < data.length; i++) {


                    val = "<tr>" +
                        // "<td>" + <input /> + "</td>" +
                        // "<td class='first-td'>" + data[i].DefineObjective + "</td>" +
                        "<td class='first-td'><input type='button' class='btn btn-primary' onclick='ShowEmployeeData(" + data[i].AssignedTo + ");' value='" + data[i].EmployeeName + "'/></td>" +

                        // "<td class='last-td'><a class='btn btn-default btn-sm' title='Edit' style='cursor: pointer;' onclick='LoadingEditData(" + data[i].Id + ")' data-toggle='modal' data-target='#DeductionModal'><i class='fa fas fa-pencil'></i></a><a class='btn  btn-sm' title='Delete' style='cursor: pointer;' onclick = Delete(" + data[i].Id + ") > <i class='fa fa-trash'></i></a > "
                        //"<td class='last-td'><label class='form-check-inline u-check g-mr-20 mx-0 mb-0'> <input class='g-hidden-xs-up g-pos-abs g-top-0 g-right-0' id='btnEdit' onclick='LoadingEditData(" + data.data[i].pK_MetaDataID + ")' name = 'radGroup1_1' data-toggle='modal' data-target='#myModal'><i class='fa fa-pencil'></i></label ></td>" +
                        + "</tr></tbody>";


                    $('#values1').append(val);
                }
            }


            $('#AllCountrydatadetailTable555').dataTable({
                "bProcessing": true,
                "bPaginate": true,
                "sPaginationType": "full_numbers",
                "responsive": true,
                "ordering": true
            });

        }

        function LoadingEditData(ID) {

            debugger;

            console.log(ID);

            //Mode = "Update";
            //$("#AddTask").hide();
            //$(".updateTask").hide();

            //$("#divAddTask").append(" <button type='button' class='btn btn-inverse-primary  my-auto ml-auto updateTask' id='updateTask' onclick='UpdateMetaData(" + ID + ");'>Update</button>");

            $.ajax({
                type: "POST",

                url: "/Performance/EditEmployeeResults",

                data: { id: ID },

                success: onSuccessMetaDetaDetails,

                error: function (error) {
                    alert("error", error);
                },
                cache: false

            });

        }

        function onSuccessMetaDetaDetails(data) {
            debugger

            $("#EmployeeResultsId").val(data.Id);
            $("#Status").val(data.Status);
            $('#CompletedPercentage').val(data.CompletedPercentage);
            $('#DefineKeyResult').val(data.DefineKeyResult);
            $("#Activechk").prop('checked', data.Active);

            $("#DeductionModal").modal('show');
        }

        function SaveData() {

            debugger;

            var Id = $("#EmployeeResultsId").val();

            var DefineKeyResult = $("#DefineKeyResult").val();

            var Status = $('#Status').val();

            var CompletedPercentage = $('#CompletedPercentage').val();

            var Active = $('#Activechk').is(":checked");

            if (DefineKeyResult == null || DefineKeyResult == '' || !DefineKeyResult.trim()) {

                Swal.fire({
                    icon: 'warning',
                    dangerMode: true,
                    text: 'Please Add valid value!'
                });
                return false;
            }

            var Data = JSON.stringify(
                {
                    Id: Id,
                    DefineKeyResult: DefineKeyResult,
                    Status: Status,
                    CompletedPercentage: CompletedPercentage,
                    Active: Active
                });

            $.ajax({
                type: "POST",
                data: Data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "/Performance/AddEmployeeResults",
                success: onSuccessAddManagement,
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong to Insert new Record!',
                    });
                },
                cache: false
            });

        }

        function onSuccessAddManagement(data) {

            debugger;

            $("#DeductionModal").modal('hide');

            var Id = $("#EmployeeResultsId").val();

            $("#ManagerKeyResults").html("");

            ShowEmployeeData(AssignedToID);

            Swal.fire({
                icon: 'info',
                title: 'Info',
                text: 'Your Data Saved Successfully',
            }).then(function () {
                //location.reload(true);
            });
            //  Mode = "";
            // clearfields();

            //LoadingEmployeeCostDetails();

        }

        function UpdateMetaData(ID) {
            Mode = "Update";

            var DefineKeyResult = $("#DefineKeyResult").val();
            var Status = $('#Status').val();
            var CompletedPercentage = $('#CompletedPercentage').val();
            var Active = $('#Activechk').is(":checked");

            var Data = JSON.stringify(
                {
                    Id: ID,
                    DefineKeyResult: DefineKeyResult,
                    Status: Status,
                    CompletedPercentage: CompletedPercentage,
                    Active: Active

                });
            /* $("#CountryModal").modal('hide')*/
            $.ajax({
                type: "POST",
                data: Data,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "/Performance/UpdateEmployeeResults",
                success: onSuccessUpdateManagement,
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong to Insert new Reord!',
                    });
                },
                cache: false,
            });
        }
        function onSuccessUpdateManagement(data) {
            Swal.fire({
                icon: 'info',
                title: 'Info',
                text: 'Your work has been Save.',
            }).then(function () {
                location.reload(true);
            });
            Mode = "";
            clearfields();

            LoadingEmployeeCostDetails();

        }




        function GetEmployeeId() {

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/EmployeeProfile/Employeesddl",
                success: function (data) {

                    if (data != 0) {

                        $('#AssignedTo').empty();
                        $('#AssignedTo').append('<option value="-1" selected disabled>Select Employee</option>');
                        $.each(data, function (i, tweet) {
                            $('#AssignedTo').append('<option value="' + data[i].Id + '">' + data[i].Name + '</option>');

                        });

                    }

                },
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                },
                cache: false,

            });
        }

        function GetDepartmentList() {

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Performance/DepartmentList",
                success: function (data) {

                    if (data != 0) {

                        $('#DepId').empty();
                        $('#DepId').append('<option value="-1" selected disabled>Select Department</option>');
                        $.each(data, function (i, tweet) {
                            $('#DepId').append('<option value="' + data[i].Id + '">' + data[i].Name + '</option>');

                        });

                    }

                },
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                },
                cache: false,

            });
        }


        function clearfields() {
            $(".updateTask").hide();
            $("#AddTask").show();

            $("#Status").val("-1").select2();
            $("#CompletedPercentage").val("");
            $("#DefineKeyResult").val("");


        }

        function DeptChange(btn) {

            debugger;

            $("#EmployeeKeyResults").empty();

            $("#ManagerKeyResults").empty();

  

            var JobId = btn.value;


            document.getElementById("departmentName").value = btn.value;


            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: { "DepName": JobId },
                url: "/Performance/GetKeyObjectiveForDepartment",
                success: function (data) {

                    debugger;

                    onSuccessEmployeeCostDetails(data);             
                },
                error: function (error) {

                },
                cache: false
            });

        }

        var AssignedToID = '';

        function ShowEmployeeData(AssignedTo) {
            debugger;

            $("#ManagerKeyResults").html("");

            $("#EmployeeKeyResults").html("");

            AssignedToID = AssignedTo;

            ShowManagerKeyResults(AssignedTo);

            var str = '';

            $.ajax({
                type: "POST",
                //contentType: "application/json; charset=utf-8",
                data: { "AssignedTo": AssignedTo },

                url: "/Performance/GetKeyObjectiveForDepartment2",

                success: function (data) {

                    debugger;

                    console.log(data);

                    str += '<table class="table table-bordered table-striped table-condensed">' +
                        '<thead>' +
                        '<tr>' +
                        '<th>DefineKey Result</th>' +
                        '<th>Completed Percentage</th>' +
                        '<th>Status</th>' +
 /*                       '<th> Action </th>' +*/

                        '</tr>' +
                        '</thead>' +
                        '<tbody>';

                    $(data).each(function (index, obj) {

                        str += '<tr><td>' + obj.DefineKeyResult + '</td><td>' + obj.CompletedPercentage + '</td><td>' + obj.Status + '</td>' +
                            //'<td>' +
                            //'<button style="border:none; font-size:11px;" onclick="LoadingEditData(' + obj.Id + ');"><i class="fa fa-pencil"></i></button>' +
                            //'</td>' +
                            '</tr > ';

                    });

                    str += '</tbody></table>';

                    $("#EmployeeKeyResults").html(str);                  

                },
                error: function (error) {
                    console.log(error);
                },
                cache: false
            });
        }


        function ShowManagerKeyResults(AssignedTo) {
            debugger;

            var str = '';

            $.ajax({
                type: "POST",
 
                data: { "AssignedTo" : AssignedTo },

                url: "/Performance/GetManagerKeyResultList",

                success: function (obj) {

                    debugger;

                    console.log(obj);

                  str = '<table class="table table-bordered table-striped table-condensed" style="margin-top:80px;">' +
                        '<tr><th style="width:50%;">Date Of Joining : </th><td>' + obj.DateOfJoining + '</td></tr>' +
                        '<tr><th>Gross Salary : </th><td>' + obj.GrossSalary + '</td></tr>' +
                        '<tr><th>Fit For Promotion : </th><td><input type="checkbox" ' + (obj.FitForPromotion ? 'checked' : '') +'/></td></tr>' +
                        '<tr><th>Fit In Current Possition : </th><td><input type="checkbox" ' + (obj.FitInCurrentPossition ? 'checked' : '') +'/></td></tr>' +
                        '<tr><th>Not Fit For Promotion But Likely To Become : </th><td><input type="checkbox" ' + (obj.NotFitForPromotionButLikelyToBecome ? 'checked' : '') +'/></td></tr>' +
                        '<tr><th>Eligible For Bonus : </th><td><input type="checkbox" ' + (obj.EligibleForBonus ? 'checked' : '') +'/></td></tr>' +
                        '<tr><th>Eligible For Increment Percentage : </th><td>' + obj.EligibleForIncrementPercentage + '</td></tr>' +
                      '<tr><th>Action : </th><td><button class="btn btn-primary" onclick="LoadEditDataInModal(' + obj.Id + ');"><i class="fa fa-pencil"></i></button> <button class="btn btn-danger" onclick="DeleteManagerKeyResults(' + obj.Id + ');"><i class="fa fa-trash"></i></button></td></tr></table>';

                    $("#ManagerKeyResults").html(str);
                },
                error: function (error) {
                    console.log(error);
                },
                cache: false
            });
        }

        function SaveManagerKeyResults() {
            debugger;

            var Id = $("#Id").val();

            var EmpId = $("#EmpId").val();

            var DateOfJoining = $("#DateOfJoining").val();

            var GrossSalary = $("#GrossSalary").val();

            var EligibleForIncrementPercentage = $("#EligibleForIncrementPercentage").val();

            var Active = $("#Active").prop("checked");

            var EligibleForBonus = $("#EligibleForBonus").prop("checked");

            var NotFitForPromotionButLikelyToBecome = $("#NotFitForPromotionButLikelyToBecome").prop("checked");

            var UnfitForPromotionHasReachedHisCeiling = $("#UnfitForPromotionHasReachedHisCeiling").prop("checked");

            var FitForPromotion = $("#FitForPromotion").prop("checked");

            var FitInCurrentPossition = $("#FitInCurrentPossition").prop("checked");

            var Data = {
                Id: Id,
                EmpId: EmpId,
                DateOfJoining: DateOfJoining,
                GrossSalary: GrossSalary,
                EligibleForIncrementPercentage: EligibleForIncrementPercentage,
                Active: Active,
                EligibleForBonus: EligibleForBonus,
                NotFitForPromotionButLikelyToBecome: NotFitForPromotionButLikelyToBecome,
                UnfitForPromotionHasReachedHisCeiling: UnfitForPromotionHasReachedHisCeiling,
                FitForPromotion: FitForPromotion,
                FitInCurrentPossition: FitInCurrentPossition,
            };

            $.ajax({
                type: "POST",
                data: Data,
                url: "/Performance/AddManagerKeyResult",
                success: function (data) {
                    debugger;

                    Swal.fire({
                        icon: 'info',
                        title: 'Info',
                        text: 'Saved Successfully.',
                    }).then(function () {
                        $("#ManagerKeyResultModal").modal('hide');
                        $("#Save").show();
                        $("#Update").hide();
                    });

                    ClearManagerKeyResultsFields();

                    ShowManagerKeyResults(AssignedToID);
                },
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong to Insert new Reord!',
                    });
                },
                cache: false,
            });
        }

        function DeleteManagerKeyResults(Id) {
            debugger;

            if (confirm("Are You Sure To Delete This Data?")) {

                $.ajax({
                    type: "POST",
                    data: { Id: Id },
                    url: "/Performance/DeleteManagerKeyResult",
                    success: function (data) {
                        Swal.fire({
                            icon: 'info',
                            title: 'Info',
                            text: 'Deleted Successfully.',
                        });
                    },
                    error: function (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong to Insert new Reord!',
                        });
                    },
                    cache: false,
                });
            }
        }

        function CreateManagerKeyResults() {
            debugger;

            GetEmployeeIdForManagerKeyResultsModal();

            ClearManagerKeyResultsFields();

            $("#Save").show();

            $("#Update").hide();

            $("#EmpId").prop("disabled", false);

            $("#ManagerKeyResultModal").modal('show');
        }

        function LoadEditDataInModal(ID) {

            debugger;

            console.log(ID);

            GetAllEmployesForModalEdit();
            $("#Save").hide();
            $("#Update").show();

            //Mode = "Update";
            //$("#AddTask").hide();
            //$(".updateTask").hide();

            //$("#divAddTask").append(" <button type='button' class='btn btn-inverse-primary  my-auto ml-auto updateTask' id='updateTask' onclick='UpdateMetaData(" + ID + ");'>Update</button>");

            $.ajax({
                type: "POST",

                url: "/Performance/EditManagerKeyResult",

                data: { id: ID },

                success: function (data) {
                    debugger

                    $("#Id").val(data.Id);

                    $("#EmpId").val(data.EmpId);

                    $("#DateOfJoining").val(data.DateOfJoining);

                    $("#GrossSalary").val(data.GrossSalary);

                    $("#EligibleForIncrementPercentage").val(data.EligibleForIncrementPercentage);

                    $("#Active").prop("checked", data.Active);

                    $("#EligibleForBonus").prop("checked", data.EligibleForBonus);

                    $("#NotFitForPromotionButLikelyToBecome").prop("checked", data.NotFitForPromotionButLikelyToBecome);

                    $("#UnfitForPromotionHasReachedHisCeiling").prop("checked", data.UnfitForPromotionHasReachedHisCeiling);

                    $("#FitForPromotion").prop("checked", data.FitForPromotion);

                    $("#FitInCurrentPossition").prop("checked", data.FitInCurrentPossition);

                    $("#FitForPromotion").prop("checked", data.FitForPromotion);

                    $("#EmpId").prop("disabled", true);

                    $("#ManagerKeyResultModal").modal('show');
                },

                error: function (error) {
                    alert("error", error);
                },
                cache: false

            });

        }


        function Update() {
            debugger;

            var Id = $("#Id").val();

            var EmpId = $("#EmpId").val();

            var DateOfJoining = $("#DateOfJoining").val();

            var GrossSalary = $("#GrossSalary").val();

            var EligibleForIncrementPercentage = $("#EligibleForIncrementPercentage").val();

            var Active = $("#Active").prop("checked");

            var EligibleForBonus = $("#EligibleForBonus").prop("checked");

            var NotFitForPromotionButLikelyToBecome = $("#NotFitForPromotionButLikelyToBecome").prop("checked");

            var UnfitForPromotionHasReachedHisCeiling = $("#UnfitForPromotionHasReachedHisCeiling").prop("checked");

            var FitForPromotion = $("#FitForPromotion").prop("checked");

            var FitInCurrentPossition = $("#FitInCurrentPossition").prop("checked");

           var Data = {
                    Id: Id,
                    EmpId: EmpId,
                    DateOfJoining: DateOfJoining,
                    GrossSalary: GrossSalary,
                    EligibleForIncrementPercentage: EligibleForIncrementPercentage,
                    Active: Active,
                    EligibleForBonus: EligibleForBonus,
                    NotFitForPromotionButLikelyToBecome: NotFitForPromotionButLikelyToBecome,
                    UnfitForPromotionHasReachedHisCeiling: UnfitForPromotionHasReachedHisCeiling,
                    FitForPromotion: FitForPromotion,
                    FitInCurrentPossition: FitInCurrentPossition,
                   };

            $.ajax({
                type: "POST",
                data: Data,
                url: "/Performance/UpdateManagerKeyResult",
                success: onSuccessUpdate,
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong to Insert new Reord!',
                    });
                },
                cache: false,
            });
        }
        function onSuccessUpdate(data) {
            debugger;
            Swal.fire({
                icon: 'info',
                title: 'Info',
                text: 'Saved Successfully.',
            }).then(function () {
                $("#ManagerKeyResultModal").modal('hide');
                $("#Save").show();
                $("#Update").hide();
            });

            ClearManagerKeyResultsFields();

            ShowManagerKeyResults(AssignedToID);
        }


        function ClearManagerKeyResultsFields() {

            $("#Id").val("");

            $("#EmpId").val("");

            $("#DateOfJoining").val("");

            $("#GrossSalary").val("");

            $("#EligibleForIncrementPercentage").val("");

            $("#Active").prop("checked", true);

            $("#EligibleForBonus").prop("checked", true);

            $("#NotFitForPromotionButLikelyToBecome").prop("checked", true);

            $("#UnfitForPromotionHasReachedHisCeiling").prop("checked", true);

            $("#FitForPromotion").prop("checked", true);

            $("#FitInCurrentPossition").prop("checked", true);

            $("#FitForPromotion").prop("checked", true);
        }

        function GetAllEmployesForModalEdit() {

            debugger;

            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Performance/GetAllEmployesForModalEdit",
                success: function (data) {

                    if (data != 0) {

                        $('#EmpId').empty();
                        $('#EmpId').append('<option value="-1" selected disabled>Select Employee</option>');
                        $.each(data, function (i, tweet) {
                            $('#EmpId').append('<option value="' + data[i].Id + '">' + data[i].Name + '</option>');

                        });

                    }

                },
                error: function (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong!',
                    });
                },
                cache: false,

            });
        }

    </script>

}