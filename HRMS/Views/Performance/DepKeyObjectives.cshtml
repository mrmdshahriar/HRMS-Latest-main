
@{
    ViewBag.Title = "DepKeyObjectives";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>DepKeyObjectives</h2>

<link rel="stylesheet" href="~/Content/Assets/vendors/bootstrap-datepicker/bootstrap-datepicker.min.css">
<h2>Transfer</h2>
<div class="container">
    <form id="transferFormID">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group row">
                    <label class="col-sm-8 col-form-label" for="exampleFormControlSelect1">Employee</label>
                    <div class="col-sm-12">
                        <select class="form-control" required name="EmployeeId" id="Type">
                            <option disabled value="" selected="selected">Select Employee</option>
                            @foreach (var item in Model.EmployeeList)
                            {
                                <option value="@item.Id">@item.FirstName @item.LastName</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group row">
                    <label class="col-sm-8 col-form-label" for="exampleFormControlSelect1">Designation</label>
                    <div class="col-sm-12">
                        <select class="form-control" required name="DesignationId" id="DesignationId">
                            <option disabled value="" selected="selected">Designation</option>
                            @foreach (var item in Model.DesignationList)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }

                        </select>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group row">
                    <label class="col-sm-8 col-form-label" for="exampleFormControlSelect1">New Designation</label>
                    <div class="col-sm-12">
                        <select class="form-control" required name="NewDesignationId" id="DesignationId">
                            <option disabled value="" selected="selected">Designation</option>
                            @foreach (var item in Model.DesignationList)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }

                        </select>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group row">
                    <label class="col-sm-8 col-form-label" for="exampleFormControlSelect1">From Department</label>
                    <div class="col-sm-12">
                        <select class="form-control" required name="FromDepartmentId" id="DepartmentId">
                            <option disabled value="" selected="selected">Department</option>
                            @foreach (var item in Model.DepartmentList)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group row">
                    <label class="col-sm-8 col-form-label" for="exampleFormControlSelect1">To Department</label>
                    <div class="col-sm-12">
                        <select class="form-control" required name="ToDepartmentId" id="DepartmentId">
                            <option disabled value="" selected="selected">Department</option>
                            @foreach (var item in Model.DepartmentList)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>
                </div>
            </div>




            <div class="col-md-4">
                <div class="form-group row">
                    <label class="col-sm-12 col-form-label">Trasnfer Date</label>
                    <div class="col-sm-12">
                        <input id="dateInputId" required name="TrasnferDate" type="date" class="form-control">
                    </div>
                </div>
            </div>


            <div class="col-md-4">
                <div class="form-group row">
                    <label class="col-sm-8 col-form-label" for="exampleFormControlSelect1">Transfer By</label>
                    <div class="col-sm-12">
                        <select class="form-control" id="terminationBYSelectId" required name="TrasnferedBy">
                            <option disabled value="" selected="selected">Select Employee</option>
                            @foreach (var item in Model.EmployeeList)
                            {
                                <option value="@item.Id">@item.FirstName @item.LastName</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group row">
                    <label class="col-sm-8 col-form-label">Transfer Reason</label>
                    <div class="col-sm-12">
                        <textarea type="text" required name="TrasnferReason" class="form-control" placeholder="Enter Reason"></textarea>
                    </div>
                </div>
            </div>
        </div>

        <div class="row ">
            <div class="col-12 text-right">
                <button class="btn btn-primary">
                    <i class="fa fa-floppy-o" aria-hidden="true"></i> Submit
                </button>
            </div>
        </div>
    </form>
</div>

<script src="~/Content/Assets/vendors/base/vendor.bundle.base.js"></script>
<script src="~/Content/Assets/vendors/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
<!-- endinject -->
<!-- inject:js -->
<script src="~/Content/Assets/js/off-canvas.js"></script>
<script src="~/Content/Assets/js/hoverable-collapse.js"></script>
<script src="~/Content/Assets/js/template.js"></script>
<script src="~/Content/Assets/js/settings.js"></script>
<script src="~/Content/Assets/js/todolist.js"></script>
<script src="~/Content/Assets/js/formpickers.js"></script>
<!-- endinject -->
<!-- plugin js for this page -->
<script src="~/Content/Assets/vendors/jquery-steps/jquery.steps.min.js"></script>
<script src="~/Content/Assets/vendors/jquery-validation/jquery.validate.min.js"></script>

<script type="text/javascript">

    var TransferObject = {};

    var full_url = document.URL; // Get current url
    var url_array = full_url.split('/') // Split the string into an array with / as separator
    var TransferId = url_array[url_array.length - 1];  // Get the last part of the array (-1)
    if (isNaN(TransferId)) TransferId = 0;

    $(window).on("load", function () {
        if (TransferId > 0)
            $.ajax({
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                type: "POST",
                dataType: "json",
                url: `/EmployeeProfile/LoadTransferEmployee/${TransferId}`,
                success: function (response) {
                    debugger
                    const { Transfer, TrasnferDate } = response;
                    TransferObject = Transfer;
                    TransferObject.TrasnferDate = TrasnferDate;
                },
                error: function (error) {
                    $('#responseText').html(error.responseText);
                    debugger
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong.',
                    });
                },
                cache: false
            }).then(function (r) {
                PopulateTransferForm($.parseJSON(JSON.stringify(TransferObject)));

            })

        ToggleInputs();
    });


    function PopulateTransferForm(data) {
        $.each(data, function (key, value) {
            var $el = $(`[name="${key}"]`),
                type = $el.attr('type');
            if ($el.length > 0)
                switch (type) {
                    case 'checkbox':
                        $el.attr('checked', value);
                        break;
                    case 'radio':
                        $el.attr('checked', value);
                        break;
                    case 'date':
                        debugger
                        $el.val(value);
                        break;
                    default:
                        $el.val(value);
                }
        });
        debugger

    }

    $('#transferFormID').submit(function (e) {
        debugger
        e.preventDefault();
        onAddTransferEmployee();
    });
    function onAddTransferEmployee() {
        debugger
        var TransferFormDataArray = $("#transferFormID").serializeArray();
        TransferObject = {};

        $.each(TransferFormDataArray, function () {
            var nameParts = this.name.split('[');
            if (nameParts.length == 1) {
                if (TransferObject[this.name] !== undefined) {
                    if (!TransferObject[this.name].push) {
                        TransferObject[this.name] = [TransferObject[this.name]];
                    }
                    TransferObject[this.name].push(this.value || '');
                } else {
                    TransferObject[this.name] = this.value || '';
                }
            }
            else {
                $.each(nameParts, function (index) {
                    nameParts[index] = this.replace(/\]$/, '');
                });
                var arrItem = this;
                var temp = TransferObject;
                $.each(nameParts, function (index) {
                    var next;
                    var nextNamePart;
                    if (index >= nameParts.length - 1)
                        next = arrItem.value || '';
                    else {
                        nextNamePart = nameParts[index + 1];
                        if (trim(this) != '' && temp[this] !== undefined)
                            next = temp[this];
                        else {
                            if (trim(nextNamePart) == '')
                                next = [];
                            else
                                next = {};
                        }
                    }

                    if (trim(this) == '') {
                        temp.push(next);
                    } else
                        temp[this] = next;

                    temp = next;
                });
            }
        });

        TransferObject.TransferId = TransferId;

        $.ajax({
            async: false,
            traditional: true,
            type: "POST",
            data: JSON.stringify(TransferObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/EmployeeProfile/InsertUpdateEmployeeTransfer",
            success: function (response) {
                Swal.fire({
                    icon: 'Info',
                    title: 'Record Saved',
                    text: 'Record Save Successfuly.',
                }).then(function () {
                    window.location.replace(`/EmployeeProfile/Transfers`);
                });
            },
            error: function (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong.',
                });
            },
            cache: false
        });
    }
</script>