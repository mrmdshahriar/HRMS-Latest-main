@model HRMS.Common
@{
    ViewBag.Title = "CreateOC";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link rel="stylesheet" href="~/Content/Assets/vendors/bootstrap-datepicker/bootstrap-datepicker.min.css">

<div class="container-fluid">
    <div class="__top_head">
        <h3 class="all-md">Apply for OC</h3>
        <div class="btn_blk">
            <a href="/NotificationRequests/ObjectionCertificate" class="btn btn-inverse-primary u-btn-3d ml-auto">
                Back
            </a>
        </div>
    </div>
    <div class="__blk">
        <form id="OCFormID">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group row">
                        <label class="col-sm-8 col-form-label" for="exampleFormControlSelect1">Name</label>
                        <div class="col-sm-12">
                             @*<input type="text" name="EmployeeId" id="EmployeeId" class="form-control" placeholder="Enter Name">*@

                      
                                <select class="form-control" required name="EmployeeId" id="Type" onchange="myFunction(this.value);">
                                    <option disabled value="" selected="selected">Select Employee</option>
                                    @foreach (var item in Model.EmployeeList)
                                    {
                                        <option value="@item.Id">@item.FirstName @item.LastName</option>
                                    }
                                </select>
             
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group row">
                        <label class="col-sm-8 col-form-label" for="exampleFormControlSelect1">Designation</label>
                        <div class="col-sm-12">
                            <input type="text" name="txtDesignation" id="txtDesignation" class="form-control" readonly>
                            <input type="hidden" value="" name="DesignationId" id="DesignationId" class="form-control">
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group row">
                        <label class="col-sm-8 col-form-label" for="exampleFormControlSelect1">Department</label>
                        <div class="col-sm-12">
                            <input type="text" name="txtDepartmentId" id="txtDepartmentId" class="form-control" readonly>
                            <input type="hidden" value="" name="DepartmentId" id="DepartmentId">
                        </div>
                    </div>
                </div>

                <div class="col-md-6" id="lastWorkingDateID">
                    <div class="form-group row">
                        <label class="col-sm-12 col-form-label">Date</label>
                        <div class="col-sm-12">
                            <input required id="Date" name="Date" type="date" class="form-control">
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group row">
                        <label class="col-sm-8 col-form-label">Subject</label>
                        <div class="col-sm-12">
                            <textarea type="text" required name="Subject" class="form-control" placeholder="Enter subject"></textarea>
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-group row">
                        <label class="col-sm-8 col-form-label">Application</label>
                        <div class="col-sm-12">
                            <textarea type="text" required name="Application" rows="15" class="form-control" placeholder="Application"></textarea>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row ">
                <div class="col-12 text-right">
                    <button id="qualificationBtn" class="btn btn-primary">
                        <i class="fa fa-floppy-o" aria-hidden="true"></i> Submit
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script src="~/Content/Assets/js/formpickers.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.js"></script>
<script>

    var OCObject = {};

    var full_url = document.URL; // Get current url
    var url_array = full_url.split('/') // Split the string into an array with / as separator
    var OCID = url_array[url_array.length - 1];  // Get the last part of the array (-1)
    if (isNaN(OCID)) OCID = 0;
    debugger
    $(document).ready(function () {
        //$(window).on("load", function () {
        debugger
        if (OCID > 0)
            $.ajax({
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                type: "POST",
                dataType: "json",
                url: `/NotificationRequests/LoadOCById/${OCID}`,
                success: function (response) {
                    debugger
                    const { Termination, Date } = response;
                    OCObject = Termination;
                    OCObject.Date = Date;
                   // OCObject.LastWorkingDate = LastWorkingDate;

                    ToggleInputs();
                },
                error: function (error) {
                    $('#responseText').html(error.responseText);
                    debugger
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong.',
                    });
                },
                cache: false
            }).then(function (r) {
                PopulateTerminationForm($.parseJSON(JSON.stringify(OCObject)));

            })

        ToggleInputs();
    });

    function myFunction() {
        debugger
        var JobId = document.getElementById("Type").value;

        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            data: { "JobId": JobId },
            url: "/EmployeeProfile/JobTitleChange",
            success: function (data) {
                AutoFillTextBox(data);

            },
            error: function (error) {

            },
            cache: false
        });
        ToggleInputs();

    };

    function AutoFillTextBox(data) {
        for (const element of data) {
            $("#txtDesignation").val(element.Name).attr('disabled', 'disabled');
            $("#txtDepartmentId").val(element.dName).attr('disabled', 'disabled');
            $("#DesignationId").val(element.DesigId).attr('disabled', 'disabled');
            $("#DepartmentId").val(element.DepartId).attr('disabled', 'disabled');
        }


    }



    function PopulateTerminationForm(data) {
        $.each(data, function (key, value) {
            var $el = $(`[name="${key}"]`),
                type = $el.attr('type');
            if ($el.length > 0)
                switch (type) {
                    case 'checkbox':
                        $el.attr('checked', value);
                        break;
                    case 'radio':
                        $el.attr('checked', value);
                        break;
                    case 'date':
                        debugger
                        $el.val(value);
                        break;
                    default:
                        $el.val(value);
                }
        });
        debugger

    }

  
    function ToggleInputs() {
        if (OCObject.Type == 1) {
            $("#lastWorkingDateInputId").attr('required', false);
            debugger
            $('#lastWorkingDateID').hide();


            $('#dateId').show();
            $('#dateId').attr('required', true);
            $('#terminationById').show();
            $('#terminationById').attr('required', true);
        } else {
            $('#dateInputId').attr('required', false);
            debugger
            $('#dateId').hide();
            $('#terminationBYSelectId').attr('required', false);
            $('#terminationById').hide();

            $('#lastWorkingDateID').show();
            $('#lastWorkingDateID').attr('required', true);
        }
    }
    $('#OCFormID').submit(function (e) {
        debugger
        e.preventDefault();
        onAddObjectionCertificate();
    });


    function onAddObjectionCertificate() {
        debugger
        var OCFormDataArray = $("#OCFormID").serializeArray();
        OCObject = {};

        $.each(OCFormDataArray, function () {
            var nameParts = this.name.split('[');
            if (nameParts.length == 1) {
                if (OCObject[this.name] !== undefined) {
                    if (!OCObject[this.name].push) {
                        OCObject[this.name] = [OCObject[this.name]];
                    }
                    OCObject[this.name].push(this.value || '');
                } else {
                    OCObject[this.name] = this.value || '';
                }
            }
            else {
                $.each(nameParts, function (index) {
                    nameParts[index] = this.replace(/\]$/, '');
                });
                var arrItem = this;
                var temp = OCObject;
                $.each(nameParts, function (index) {
                    var next;
                    var nextNamePart;
                    if (index >= nameParts.length - 1)
                        next = arrItem.value || '';
                    else {
                        nextNamePart = nameParts[index + 1];
                        if (trim(this) != '' && temp[this] !== undefined)
                            next = temp[this];
                        else {
                            if (trim(nextNamePart) == '')
                                next = [];
                            else
                                next = {};
                        }
                    }

                    if (trim(this) == '') {
                        temp.push(next);
                    } else
                        temp[this] = next;

                    temp = next;
                });
            }
        });

        var desid = document.getElementById("DesignationId").value;
        var DepartmentId = document.getElementById("DepartmentId").value;
        OCObject.OCID = OCID;
        OCObject.DesignationId = desid;
        OCObject.DepartmentId = DepartmentId;
        debugger
        $.ajax({
            async: false,
            traditional: true,
            type: "POST",
            data: JSON.stringify(OCObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "/NotificationRequests/InsertUpdateOC",
            success: function (response) {
                Swal.fire({
                    icon: 'Info',
                    title: 'Record Saved',
                    text: 'Record Save Successfuly.',
                }).then(function () {
                    window.location.replace(`/NotificationRequests/ObjectionCertificate`);
                });
            },
            error: function (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong.',
                });
            },
            cache: false
        });
    }
</script>

